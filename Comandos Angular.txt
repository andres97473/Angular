>> Instalar angular, ejecutar consola como administrador
npm install -g @angular/cli

>> Crear nuevo proyecto llamado my-app
ng new my-app

>> Iniciar live reload
ng serve -o

>> Se puede eliminar la carpeta de node_module para quitarle peso al subir a git y restaurarla con el siguiente comando
npm install



>> Crear componentes de forma automatica
ng generate component "ruta_del_nuevo_componente"
ng g c components/footer


>> Instalar bootstrap en el proyecto
npm install bootstrap --save
npm install jquery --save
npm install popper.js --save

>> una vez instaladas las librerias debemos indicar a angular que las utilice, esto se hace en el angular.json
                        "styles": [
                            "src/styles.css",
                            "node_modules/bootstrap/dist/css/bootstrap.min.css"
                        ],
                        "scripts": [
                            "node_modules/jquery/dist/jquery.slim.min.js",
                            "node_modules/popper.js/dist/umd/popper.min.js",
                            "node_modules/bootstrap/dist/js/bootstrap.min.js"
                        ]


>> Instalar sweetalert2
npm i sweetalert2 --save

>> Desinstalar sweetalert2
npm uninstall sweetalert2


>> Instalar angular material
ng add @angular/material
npm uninstall @angular/material



>> Instalar libreria de firebase angular AngularFire
npm install firebase @angular/fire --save

>> despues se debe importar
import { AngularFireModule } from '@angular/fire';
import { AngularFirestoreModule } from '@angular/fire/firestore';
import { environment } from '../environments/environment';

	AngularFireModule.initializeApp(environment.firebaseConfig),
	AngularFirestoreModule

>> para utilizar el store se lo hace en el componente en que se lo va a utilizar por lo general en el servicio
import { AngularFirestore } from '@angular/fire/firestore'